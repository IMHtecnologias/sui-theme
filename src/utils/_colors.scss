// --- Color --- //

// Color Variations Function:

// Description:
// Provide a color and step to get a lighter or darker color variation.
// If step provided is bigger than the step variation limit the lighter or darker color available will be returned.

// Usage:
// $c-primary-light: color-variation($c-primary, 1) -> 1 step lighter
// $c-primary-lighter: color-variation($c-primary, 2) -> 2 steps lighter
// $c-primary-dark: color-variation($c-primary, -2) -> 2 steps darker
// $c-primary-darkest: color-variation($c-primary, -4) -> 4 steps darker

@function color-variation($color, $step: 0) {
  $hue: hue($color);
  $saturation: saturation($color);
  $lightness: lightness($color);
  $step-luminosity-positive: 7, 10, 13, 16;
  $step-luminosity-negative: -7, -10, -13, -16;
  $step-saturation-positive: 7, 10, 13, 16;
  $step-saturation-negative: -7, -10, -13, -16;
  $luminosity-variation: 0;
  $saturation-variation: 0;

  @if $step == 0 {
    @return $color;
  }

  @if $step >= 5 {
    @return hsl($hue, $saturation + nth($step-saturation-positive, 4), $lightness + nth($step-luminosity-positive, 4));
  }

  @if $step <= -5 {
    @return hsl($hue, $saturation + nth($step-saturation-negative, 4), $lightness + nth($step-luminosity-negative, 4));
  }

  @if $step < 0 {
    $luminosity-variation: nth($step-luminosity-negative, -$step);
    $saturation-variation: nth($step-saturation-negative, -$step);
  } @else {
    $luminosity-variation: nth($step-luminosity-positive, $step);
    $saturation-variation: nth($step-saturation-positive, $step);
  }

  $color-step: hsl($hue, $saturation + $saturation-variation, $lightness + $luminosity-variation);
  @return $color-step;
}
